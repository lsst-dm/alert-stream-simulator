// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type GLcNonPeriodic struct {

	
	
		GLcNonPeriodic01 *UnionNullFloat
	

	
	
		GLcNonPeriodic02 *UnionNullFloat
	

	
	
		GLcNonPeriodic03 *UnionNullFloat
	

	
	
		GLcNonPeriodic04 *UnionNullFloat
	

	
	
		GLcNonPeriodic05 *UnionNullFloat
	

	
	
		GLcNonPeriodic06 *UnionNullFloat
	

	
	
		GLcNonPeriodic07 *UnionNullFloat
	

	
	
		GLcNonPeriodic08 *UnionNullFloat
	

	
	
		GLcNonPeriodic09 *UnionNullFloat
	

	
	
		GLcNonPeriodic10 *UnionNullFloat
	

	
	
		GLcNonPeriodic11 *UnionNullFloat
	

	
	
		GLcNonPeriodic12 *UnionNullFloat
	

	
	
		GLcNonPeriodic13 *UnionNullFloat
	

	
	
		GLcNonPeriodic14 *UnionNullFloat
	

	
	
		GLcNonPeriodic15 *UnionNullFloat
	

	
	
		GLcNonPeriodic16 *UnionNullFloat
	

	
	
		GLcNonPeriodic17 *UnionNullFloat
	

	
	
		GLcNonPeriodic18 *UnionNullFloat
	

	
	
		GLcNonPeriodic19 *UnionNullFloat
	

	
	
		GLcNonPeriodic20 *UnionNullFloat
	

}

const GLcNonPeriodicAvroCRC64Fingerprint = "'6\xe1\xe3\xfe\xb84D"

func NewGLcNonPeriodic() (*GLcNonPeriodic) {
	return &GLcNonPeriodic{}
}

func DeserializeGLcNonPeriodic(r io.Reader) (*GLcNonPeriodic, error) {
	t := NewGLcNonPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeGLcNonPeriodicFromSchema(r io.Reader, schema string) (*GLcNonPeriodic, error) {
	t := NewGLcNonPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeGLcNonPeriodic(r *GLcNonPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.GLcNonPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcNonPeriodic20, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *GLcNonPeriodic) Serialize(w io.Writer) error {
	return writeGLcNonPeriodic(r, w)
}

func (r *GLcNonPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"gLcNonPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcNonPeriodic20\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.gLcNonPeriodic\",\"type\":\"record\"}"
}

func (r *GLcNonPeriodic) SchemaName() string {
	return "lsst.gLcNonPeriodic"
}

func (_ *GLcNonPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *GLcNonPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.GLcNonPeriodic01 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic01
		
	
	case 1:
		
			r.GLcNonPeriodic02 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic02
		
	
	case 2:
		
			r.GLcNonPeriodic03 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic03
		
	
	case 3:
		
			r.GLcNonPeriodic04 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic04
		
	
	case 4:
		
			r.GLcNonPeriodic05 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic05
		
	
	case 5:
		
			r.GLcNonPeriodic06 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic06
		
	
	case 6:
		
			r.GLcNonPeriodic07 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic07
		
	
	case 7:
		
			r.GLcNonPeriodic08 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic08
		
	
	case 8:
		
			r.GLcNonPeriodic09 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic09
		
	
	case 9:
		
			r.GLcNonPeriodic10 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic10
		
	
	case 10:
		
			r.GLcNonPeriodic11 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic11
		
	
	case 11:
		
			r.GLcNonPeriodic12 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic12
		
	
	case 12:
		
			r.GLcNonPeriodic13 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic13
		
	
	case 13:
		
			r.GLcNonPeriodic14 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic14
		
	
	case 14:
		
			r.GLcNonPeriodic15 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic15
		
	
	case 15:
		
			r.GLcNonPeriodic16 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic16
		
	
	case 16:
		
			r.GLcNonPeriodic17 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic17
		
	
	case 17:
		
			r.GLcNonPeriodic18 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic18
		
	
	case 18:
		
			r.GLcNonPeriodic19 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic19
		
	
	case 19:
		
			r.GLcNonPeriodic20 = NewUnionNullFloat()

		
		
			return r.GLcNonPeriodic20
		
	
	}
	panic("Unknown field index")
}

func (r *GLcNonPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.GLcNonPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.GLcNonPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.GLcNonPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.GLcNonPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.GLcNonPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.GLcNonPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.GLcNonPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.GLcNonPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.GLcNonPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.GLcNonPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.GLcNonPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.GLcNonPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.GLcNonPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.GLcNonPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.GLcNonPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.GLcNonPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.GLcNonPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.GLcNonPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.GLcNonPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.GLcNonPeriodic20 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *GLcNonPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *GLcNonPeriodic) Finalize() { }


func (_ *GLcNonPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(GLcNonPeriodicAvroCRC64Fingerprint)
}
