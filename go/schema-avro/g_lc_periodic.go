// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type GLcPeriodic struct {

	
	
		GLcPeriodic01 *UnionNullFloat
	

	
	
		GLcPeriodic02 *UnionNullFloat
	

	
	
		GLcPeriodic03 *UnionNullFloat
	

	
	
		GLcPeriodic04 *UnionNullFloat
	

	
	
		GLcPeriodic05 *UnionNullFloat
	

	
	
		GLcPeriodic06 *UnionNullFloat
	

	
	
		GLcPeriodic07 *UnionNullFloat
	

	
	
		GLcPeriodic08 *UnionNullFloat
	

	
	
		GLcPeriodic09 *UnionNullFloat
	

	
	
		GLcPeriodic10 *UnionNullFloat
	

	
	
		GLcPeriodic11 *UnionNullFloat
	

	
	
		GLcPeriodic12 *UnionNullFloat
	

	
	
		GLcPeriodic13 *UnionNullFloat
	

	
	
		GLcPeriodic14 *UnionNullFloat
	

	
	
		GLcPeriodic15 *UnionNullFloat
	

	
	
		GLcPeriodic16 *UnionNullFloat
	

	
	
		GLcPeriodic17 *UnionNullFloat
	

	
	
		GLcPeriodic18 *UnionNullFloat
	

	
	
		GLcPeriodic19 *UnionNullFloat
	

	
	
		GLcPeriodic20 *UnionNullFloat
	

	
	
		GLcPeriodic21 *UnionNullFloat
	

	
	
		GLcPeriodic22 *UnionNullFloat
	

	
	
		GLcPeriodic23 *UnionNullFloat
	

	
	
		GLcPeriodic24 *UnionNullFloat
	

	
	
		GLcPeriodic25 *UnionNullFloat
	

	
	
		GLcPeriodic26 *UnionNullFloat
	

	
	
		GLcPeriodic27 *UnionNullFloat
	

	
	
		GLcPeriodic28 *UnionNullFloat
	

	
	
		GLcPeriodic29 *UnionNullFloat
	

	
	
		GLcPeriodic30 *UnionNullFloat
	

	
	
		GLcPeriodic31 *UnionNullFloat
	

	
	
		GLcPeriodic32 *UnionNullFloat
	

}

const GLcPeriodicAvroCRC64Fingerprint = "\x0e\xfb\v\\YS\xa9F"

func NewGLcPeriodic() (*GLcPeriodic) {
	return &GLcPeriodic{}
}

func DeserializeGLcPeriodic(r io.Reader) (*GLcPeriodic, error) {
	t := NewGLcPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeGLcPeriodicFromSchema(r io.Reader, schema string) (*GLcPeriodic, error) {
	t := NewGLcPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeGLcPeriodic(r *GLcPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.GLcPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic20, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic21, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic22, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic23, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic24, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic25, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic26, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic27, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic28, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic29, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic30, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic31, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.GLcPeriodic32, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *GLcPeriodic) Serialize(w io.Writer) error {
	return writeGLcPeriodic(r, w)
}

func (r *GLcPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"gLcPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic20\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic21\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic22\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic23\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic24\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic25\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic26\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic27\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic28\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic29\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic30\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic31\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"gLcPeriodic32\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.gLcPeriodic\",\"type\":\"record\"}"
}

func (r *GLcPeriodic) SchemaName() string {
	return "lsst.gLcPeriodic"
}

func (_ *GLcPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *GLcPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *GLcPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.GLcPeriodic01 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic01
		
	
	case 1:
		
			r.GLcPeriodic02 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic02
		
	
	case 2:
		
			r.GLcPeriodic03 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic03
		
	
	case 3:
		
			r.GLcPeriodic04 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic04
		
	
	case 4:
		
			r.GLcPeriodic05 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic05
		
	
	case 5:
		
			r.GLcPeriodic06 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic06
		
	
	case 6:
		
			r.GLcPeriodic07 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic07
		
	
	case 7:
		
			r.GLcPeriodic08 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic08
		
	
	case 8:
		
			r.GLcPeriodic09 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic09
		
	
	case 9:
		
			r.GLcPeriodic10 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic10
		
	
	case 10:
		
			r.GLcPeriodic11 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic11
		
	
	case 11:
		
			r.GLcPeriodic12 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic12
		
	
	case 12:
		
			r.GLcPeriodic13 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic13
		
	
	case 13:
		
			r.GLcPeriodic14 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic14
		
	
	case 14:
		
			r.GLcPeriodic15 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic15
		
	
	case 15:
		
			r.GLcPeriodic16 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic16
		
	
	case 16:
		
			r.GLcPeriodic17 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic17
		
	
	case 17:
		
			r.GLcPeriodic18 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic18
		
	
	case 18:
		
			r.GLcPeriodic19 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic19
		
	
	case 19:
		
			r.GLcPeriodic20 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic20
		
	
	case 20:
		
			r.GLcPeriodic21 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic21
		
	
	case 21:
		
			r.GLcPeriodic22 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic22
		
	
	case 22:
		
			r.GLcPeriodic23 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic23
		
	
	case 23:
		
			r.GLcPeriodic24 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic24
		
	
	case 24:
		
			r.GLcPeriodic25 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic25
		
	
	case 25:
		
			r.GLcPeriodic26 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic26
		
	
	case 26:
		
			r.GLcPeriodic27 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic27
		
	
	case 27:
		
			r.GLcPeriodic28 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic28
		
	
	case 28:
		
			r.GLcPeriodic29 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic29
		
	
	case 29:
		
			r.GLcPeriodic30 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic30
		
	
	case 30:
		
			r.GLcPeriodic31 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic31
		
	
	case 31:
		
			r.GLcPeriodic32 = NewUnionNullFloat()

		
		
			return r.GLcPeriodic32
		
	
	}
	panic("Unknown field index")
}

func (r *GLcPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.GLcPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.GLcPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.GLcPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.GLcPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.GLcPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.GLcPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.GLcPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.GLcPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.GLcPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.GLcPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.GLcPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.GLcPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.GLcPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.GLcPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.GLcPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.GLcPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.GLcPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.GLcPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.GLcPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.GLcPeriodic20 = NewUnionNullFloat()

		return
	
	
        
	case 20:
       	 	r.GLcPeriodic21 = NewUnionNullFloat()

		return
	
	
        
	case 21:
       	 	r.GLcPeriodic22 = NewUnionNullFloat()

		return
	
	
        
	case 22:
       	 	r.GLcPeriodic23 = NewUnionNullFloat()

		return
	
	
        
	case 23:
       	 	r.GLcPeriodic24 = NewUnionNullFloat()

		return
	
	
        
	case 24:
       	 	r.GLcPeriodic25 = NewUnionNullFloat()

		return
	
	
        
	case 25:
       	 	r.GLcPeriodic26 = NewUnionNullFloat()

		return
	
	
        
	case 26:
       	 	r.GLcPeriodic27 = NewUnionNullFloat()

		return
	
	
        
	case 27:
       	 	r.GLcPeriodic28 = NewUnionNullFloat()

		return
	
	
        
	case 28:
       	 	r.GLcPeriodic29 = NewUnionNullFloat()

		return
	
	
        
	case 29:
       	 	r.GLcPeriodic30 = NewUnionNullFloat()

		return
	
	
        
	case 30:
       	 	r.GLcPeriodic31 = NewUnionNullFloat()

		return
	
	
        
	case 31:
       	 	r.GLcPeriodic32 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *GLcPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *GLcPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *GLcPeriodic) Finalize() { }


func (_ *GLcPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(GLcPeriodicAvroCRC64Fingerprint)
}
