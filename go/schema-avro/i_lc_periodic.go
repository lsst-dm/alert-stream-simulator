// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type ILcPeriodic struct {

	
	
		ILcPeriodic01 *UnionNullFloat
	

	
	
		ILcPeriodic02 *UnionNullFloat
	

	
	
		ILcPeriodic03 *UnionNullFloat
	

	
	
		ILcPeriodic04 *UnionNullFloat
	

	
	
		ILcPeriodic05 *UnionNullFloat
	

	
	
		ILcPeriodic06 *UnionNullFloat
	

	
	
		ILcPeriodic07 *UnionNullFloat
	

	
	
		ILcPeriodic08 *UnionNullFloat
	

	
	
		ILcPeriodic09 *UnionNullFloat
	

	
	
		ILcPeriodic10 *UnionNullFloat
	

	
	
		ILcPeriodic11 *UnionNullFloat
	

	
	
		ILcPeriodic12 *UnionNullFloat
	

	
	
		ILcPeriodic13 *UnionNullFloat
	

	
	
		ILcPeriodic14 *UnionNullFloat
	

	
	
		ILcPeriodic15 *UnionNullFloat
	

	
	
		ILcPeriodic16 *UnionNullFloat
	

	
	
		ILcPeriodic17 *UnionNullFloat
	

	
	
		ILcPeriodic18 *UnionNullFloat
	

	
	
		ILcPeriodic19 *UnionNullFloat
	

	
	
		ILcPeriodic20 *UnionNullFloat
	

	
	
		ILcPeriodic21 *UnionNullFloat
	

	
	
		ILcPeriodic22 *UnionNullFloat
	

	
	
		ILcPeriodic23 *UnionNullFloat
	

	
	
		ILcPeriodic24 *UnionNullFloat
	

	
	
		ILcPeriodic25 *UnionNullFloat
	

	
	
		ILcPeriodic26 *UnionNullFloat
	

	
	
		ILcPeriodic27 *UnionNullFloat
	

	
	
		ILcPeriodic28 *UnionNullFloat
	

	
	
		ILcPeriodic29 *UnionNullFloat
	

	
	
		ILcPeriodic30 *UnionNullFloat
	

	
	
		ILcPeriodic31 *UnionNullFloat
	

	
	
		ILcPeriodic32 *UnionNullFloat
	

}

const ILcPeriodicAvroCRC64Fingerprint = "\f\n\x8b\xa7y\xa2\x88a"

func NewILcPeriodic() (*ILcPeriodic) {
	return &ILcPeriodic{}
}

func DeserializeILcPeriodic(r io.Reader) (*ILcPeriodic, error) {
	t := NewILcPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeILcPeriodicFromSchema(r io.Reader, schema string) (*ILcPeriodic, error) {
	t := NewILcPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeILcPeriodic(r *ILcPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.ILcPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic20, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic21, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic22, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic23, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic24, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic25, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic26, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic27, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic28, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic29, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic30, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic31, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ILcPeriodic32, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *ILcPeriodic) Serialize(w io.Writer) error {
	return writeILcPeriodic(r, w)
}

func (r *ILcPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"iLcPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic20\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic21\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic22\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic23\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic24\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic25\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic26\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic27\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic28\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic29\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic30\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic31\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"iLcPeriodic32\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.iLcPeriodic\",\"type\":\"record\"}"
}

func (r *ILcPeriodic) SchemaName() string {
	return "lsst.iLcPeriodic"
}

func (_ *ILcPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *ILcPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ILcPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.ILcPeriodic01 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic01
		
	
	case 1:
		
			r.ILcPeriodic02 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic02
		
	
	case 2:
		
			r.ILcPeriodic03 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic03
		
	
	case 3:
		
			r.ILcPeriodic04 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic04
		
	
	case 4:
		
			r.ILcPeriodic05 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic05
		
	
	case 5:
		
			r.ILcPeriodic06 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic06
		
	
	case 6:
		
			r.ILcPeriodic07 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic07
		
	
	case 7:
		
			r.ILcPeriodic08 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic08
		
	
	case 8:
		
			r.ILcPeriodic09 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic09
		
	
	case 9:
		
			r.ILcPeriodic10 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic10
		
	
	case 10:
		
			r.ILcPeriodic11 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic11
		
	
	case 11:
		
			r.ILcPeriodic12 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic12
		
	
	case 12:
		
			r.ILcPeriodic13 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic13
		
	
	case 13:
		
			r.ILcPeriodic14 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic14
		
	
	case 14:
		
			r.ILcPeriodic15 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic15
		
	
	case 15:
		
			r.ILcPeriodic16 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic16
		
	
	case 16:
		
			r.ILcPeriodic17 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic17
		
	
	case 17:
		
			r.ILcPeriodic18 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic18
		
	
	case 18:
		
			r.ILcPeriodic19 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic19
		
	
	case 19:
		
			r.ILcPeriodic20 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic20
		
	
	case 20:
		
			r.ILcPeriodic21 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic21
		
	
	case 21:
		
			r.ILcPeriodic22 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic22
		
	
	case 22:
		
			r.ILcPeriodic23 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic23
		
	
	case 23:
		
			r.ILcPeriodic24 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic24
		
	
	case 24:
		
			r.ILcPeriodic25 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic25
		
	
	case 25:
		
			r.ILcPeriodic26 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic26
		
	
	case 26:
		
			r.ILcPeriodic27 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic27
		
	
	case 27:
		
			r.ILcPeriodic28 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic28
		
	
	case 28:
		
			r.ILcPeriodic29 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic29
		
	
	case 29:
		
			r.ILcPeriodic30 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic30
		
	
	case 30:
		
			r.ILcPeriodic31 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic31
		
	
	case 31:
		
			r.ILcPeriodic32 = NewUnionNullFloat()

		
		
			return r.ILcPeriodic32
		
	
	}
	panic("Unknown field index")
}

func (r *ILcPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.ILcPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.ILcPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.ILcPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.ILcPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.ILcPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.ILcPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.ILcPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.ILcPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.ILcPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.ILcPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.ILcPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.ILcPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.ILcPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.ILcPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.ILcPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.ILcPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.ILcPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.ILcPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.ILcPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.ILcPeriodic20 = NewUnionNullFloat()

		return
	
	
        
	case 20:
       	 	r.ILcPeriodic21 = NewUnionNullFloat()

		return
	
	
        
	case 21:
       	 	r.ILcPeriodic22 = NewUnionNullFloat()

		return
	
	
        
	case 22:
       	 	r.ILcPeriodic23 = NewUnionNullFloat()

		return
	
	
        
	case 23:
       	 	r.ILcPeriodic24 = NewUnionNullFloat()

		return
	
	
        
	case 24:
       	 	r.ILcPeriodic25 = NewUnionNullFloat()

		return
	
	
        
	case 25:
       	 	r.ILcPeriodic26 = NewUnionNullFloat()

		return
	
	
        
	case 26:
       	 	r.ILcPeriodic27 = NewUnionNullFloat()

		return
	
	
        
	case 27:
       	 	r.ILcPeriodic28 = NewUnionNullFloat()

		return
	
	
        
	case 28:
       	 	r.ILcPeriodic29 = NewUnionNullFloat()

		return
	
	
        
	case 29:
       	 	r.ILcPeriodic30 = NewUnionNullFloat()

		return
	
	
        
	case 30:
       	 	r.ILcPeriodic31 = NewUnionNullFloat()

		return
	
	
        
	case 31:
       	 	r.ILcPeriodic32 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *ILcPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ILcPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *ILcPeriodic) Finalize() { }


func (_ *ILcPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(ILcPeriodicAvroCRC64Fingerprint)
}
