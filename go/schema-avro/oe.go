// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type Oe struct {

	
	
		Q *UnionNullDouble
	

	
	
		E *UnionNullDouble
	

	
	
		I *UnionNullDouble
	

	
	
		Lan *UnionNullDouble
	

	
	
		Aop *UnionNullDouble
	

	
	
		M *UnionNullDouble
	

	
	
		Epoch *UnionNullDouble
	

}

const OeAvroCRC64Fingerprint = "Çªg_lw\xb1o"

func NewOe() (*Oe) {
	return &Oe{}
}

func DeserializeOe(r io.Reader) (*Oe, error) {
	t := NewOe()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeOeFromSchema(r io.Reader, schema string) (*Oe, error) {
	t := NewOe()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeOe(r *Oe, w io.Writer) error {
	var err error
	
	err = writeUnionNullDouble( r.Q, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.I, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Lan, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Aop, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.M, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Epoch, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *Oe) Serialize(w io.Writer) error {
	return writeOe(r, w)
}

func (r *Oe) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"q\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"i\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"lan\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"aop\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"M\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"epoch\",\"type\":[\"null\",\"double\"]}],\"name\":\"lsst.oe\",\"type\":\"record\"}"
}

func (r *Oe) SchemaName() string {
	return "lsst.oe"
}

func (_ *Oe) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *Oe) SetInt(v int32) { panic("Unsupported operation") }
func (_ *Oe) SetLong(v int64) { panic("Unsupported operation") }
func (_ *Oe) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *Oe) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *Oe) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *Oe) SetString(v string) { panic("Unsupported operation") }
func (_ *Oe) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Oe) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.Q = NewUnionNullDouble()

		
		
			return r.Q
		
	
	case 1:
		
			r.E = NewUnionNullDouble()

		
		
			return r.E
		
	
	case 2:
		
			r.I = NewUnionNullDouble()

		
		
			return r.I
		
	
	case 3:
		
			r.Lan = NewUnionNullDouble()

		
		
			return r.Lan
		
	
	case 4:
		
			r.Aop = NewUnionNullDouble()

		
		
			return r.Aop
		
	
	case 5:
		
			r.M = NewUnionNullDouble()

		
		
			return r.M
		
	
	case 6:
		
			r.Epoch = NewUnionNullDouble()

		
		
			return r.Epoch
		
	
	}
	panic("Unknown field index")
}

func (r *Oe) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.Q = NewUnionNullDouble()

		return
	
	
        
	case 1:
       	 	r.E = NewUnionNullDouble()

		return
	
	
        
	case 2:
       	 	r.I = NewUnionNullDouble()

		return
	
	
        
	case 3:
       	 	r.Lan = NewUnionNullDouble()

		return
	
	
        
	case 4:
       	 	r.Aop = NewUnionNullDouble()

		return
	
	
        
	case 5:
       	 	r.M = NewUnionNullDouble()

		return
	
	
        
	case 6:
       	 	r.Epoch = NewUnionNullDouble()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *Oe) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Oe) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *Oe) Finalize() { }


func (_ *Oe) AvroCRC64Fingerprint() []byte {
  return []byte(OeAvroCRC64Fingerprint)
}
