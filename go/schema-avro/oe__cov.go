// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type Oe_Cov struct {

	
	
		QSigma *UnionNullDouble
	

	
	
		ESigma *UnionNullDouble
	

	
	
		ISigma *UnionNullDouble
	

	
	
		LanSigma *UnionNullDouble
	

	
	
		AopSigma *UnionNullDouble
	

	
	
		MSigma *UnionNullDouble
	

	
	
		EpochSigma *UnionNullDouble
	

	
	
		Q_e_Cov *UnionNullDouble
	

	
	
		Q_i_Cov *UnionNullDouble
	

	
	
		Q_lan_Cov *UnionNullDouble
	

	
	
		Q_aop_Cov *UnionNullDouble
	

	
	
		Q_M_Cov *UnionNullDouble
	

	
	
		Q_epoch_Cov *UnionNullDouble
	

	
	
		E_i_Cov *UnionNullDouble
	

	
	
		E_lan_Cov *UnionNullDouble
	

	
	
		E_aop_Cov *UnionNullDouble
	

	
	
		E_M_Cov *UnionNullDouble
	

	
	
		E_epoch_Cov *UnionNullDouble
	

	
	
		I_lan_Cov *UnionNullDouble
	

	
	
		I_aop_Cov *UnionNullDouble
	

	
	
		I_M_Cov *UnionNullDouble
	

	
	
		I_epoch_Cov *UnionNullDouble
	

	
	
		Lan_aop_Cov *UnionNullDouble
	

	
	
		Lan_M_Cov *UnionNullDouble
	

	
	
		Lan_epoch_Cov *UnionNullDouble
	

	
	
		Aop_M_Cov *UnionNullDouble
	

	
	
		Aop_epoch_Cov *UnionNullDouble
	

	
	
		M_epoch_Cov *UnionNullDouble
	

}

const Oe_CovAvroCRC64Fingerprint = "\xf9\xd0\xfe\xfa\xc9Þ \x88"

func NewOe_Cov() (*Oe_Cov) {
	return &Oe_Cov{}
}

func DeserializeOe_Cov(r io.Reader) (*Oe_Cov, error) {
	t := NewOe_Cov()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeOe_CovFromSchema(r io.Reader, schema string) (*Oe_Cov, error) {
	t := NewOe_Cov()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeOe_Cov(r *Oe_Cov, w io.Writer) error {
	var err error
	
	err = writeUnionNullDouble( r.QSigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.ESigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.ISigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.LanSigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.AopSigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.MSigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.EpochSigma, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_e_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_i_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_lan_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_aop_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_M_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Q_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E_i_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E_lan_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E_aop_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E_M_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.E_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.I_lan_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.I_aop_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.I_M_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.I_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Lan_aop_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Lan_M_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Lan_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Aop_M_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.Aop_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullDouble( r.M_epoch_Cov, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *Oe_Cov) Serialize(w io.Writer) error {
	return writeOe_Cov(r, w)
}

func (r *Oe_Cov) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"qSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"eSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"iSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"lanSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"aopSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"MSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"epochSigma\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_e_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_i_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_lan_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_aop_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_M_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"q_epoch_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e_i_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e_lan_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e_aop_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e_M_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"e_epoch_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"i_lan_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"i_aop_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"i_M_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"i_epoch_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"lan_aop_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"lan_M_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"lan_epoch_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"aop_M_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"aop_epoch_Cov\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"M_epoch_Cov\",\"type\":[\"null\",\"double\"]}],\"name\":\"lsst.oe_Cov\",\"type\":\"record\"}"
}

func (r *Oe_Cov) SchemaName() string {
	return "lsst.oe_Cov"
}

func (_ *Oe_Cov) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetInt(v int32) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetLong(v int64) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetString(v string) { panic("Unsupported operation") }
func (_ *Oe_Cov) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Oe_Cov) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.QSigma = NewUnionNullDouble()

		
		
			return r.QSigma
		
	
	case 1:
		
			r.ESigma = NewUnionNullDouble()

		
		
			return r.ESigma
		
	
	case 2:
		
			r.ISigma = NewUnionNullDouble()

		
		
			return r.ISigma
		
	
	case 3:
		
			r.LanSigma = NewUnionNullDouble()

		
		
			return r.LanSigma
		
	
	case 4:
		
			r.AopSigma = NewUnionNullDouble()

		
		
			return r.AopSigma
		
	
	case 5:
		
			r.MSigma = NewUnionNullDouble()

		
		
			return r.MSigma
		
	
	case 6:
		
			r.EpochSigma = NewUnionNullDouble()

		
		
			return r.EpochSigma
		
	
	case 7:
		
			r.Q_e_Cov = NewUnionNullDouble()

		
		
			return r.Q_e_Cov
		
	
	case 8:
		
			r.Q_i_Cov = NewUnionNullDouble()

		
		
			return r.Q_i_Cov
		
	
	case 9:
		
			r.Q_lan_Cov = NewUnionNullDouble()

		
		
			return r.Q_lan_Cov
		
	
	case 10:
		
			r.Q_aop_Cov = NewUnionNullDouble()

		
		
			return r.Q_aop_Cov
		
	
	case 11:
		
			r.Q_M_Cov = NewUnionNullDouble()

		
		
			return r.Q_M_Cov
		
	
	case 12:
		
			r.Q_epoch_Cov = NewUnionNullDouble()

		
		
			return r.Q_epoch_Cov
		
	
	case 13:
		
			r.E_i_Cov = NewUnionNullDouble()

		
		
			return r.E_i_Cov
		
	
	case 14:
		
			r.E_lan_Cov = NewUnionNullDouble()

		
		
			return r.E_lan_Cov
		
	
	case 15:
		
			r.E_aop_Cov = NewUnionNullDouble()

		
		
			return r.E_aop_Cov
		
	
	case 16:
		
			r.E_M_Cov = NewUnionNullDouble()

		
		
			return r.E_M_Cov
		
	
	case 17:
		
			r.E_epoch_Cov = NewUnionNullDouble()

		
		
			return r.E_epoch_Cov
		
	
	case 18:
		
			r.I_lan_Cov = NewUnionNullDouble()

		
		
			return r.I_lan_Cov
		
	
	case 19:
		
			r.I_aop_Cov = NewUnionNullDouble()

		
		
			return r.I_aop_Cov
		
	
	case 20:
		
			r.I_M_Cov = NewUnionNullDouble()

		
		
			return r.I_M_Cov
		
	
	case 21:
		
			r.I_epoch_Cov = NewUnionNullDouble()

		
		
			return r.I_epoch_Cov
		
	
	case 22:
		
			r.Lan_aop_Cov = NewUnionNullDouble()

		
		
			return r.Lan_aop_Cov
		
	
	case 23:
		
			r.Lan_M_Cov = NewUnionNullDouble()

		
		
			return r.Lan_M_Cov
		
	
	case 24:
		
			r.Lan_epoch_Cov = NewUnionNullDouble()

		
		
			return r.Lan_epoch_Cov
		
	
	case 25:
		
			r.Aop_M_Cov = NewUnionNullDouble()

		
		
			return r.Aop_M_Cov
		
	
	case 26:
		
			r.Aop_epoch_Cov = NewUnionNullDouble()

		
		
			return r.Aop_epoch_Cov
		
	
	case 27:
		
			r.M_epoch_Cov = NewUnionNullDouble()

		
		
			return r.M_epoch_Cov
		
	
	}
	panic("Unknown field index")
}

func (r *Oe_Cov) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.QSigma = NewUnionNullDouble()

		return
	
	
        
	case 1:
       	 	r.ESigma = NewUnionNullDouble()

		return
	
	
        
	case 2:
       	 	r.ISigma = NewUnionNullDouble()

		return
	
	
        
	case 3:
       	 	r.LanSigma = NewUnionNullDouble()

		return
	
	
        
	case 4:
       	 	r.AopSigma = NewUnionNullDouble()

		return
	
	
        
	case 5:
       	 	r.MSigma = NewUnionNullDouble()

		return
	
	
        
	case 6:
       	 	r.EpochSigma = NewUnionNullDouble()

		return
	
	
        
	case 7:
       	 	r.Q_e_Cov = NewUnionNullDouble()

		return
	
	
        
	case 8:
       	 	r.Q_i_Cov = NewUnionNullDouble()

		return
	
	
        
	case 9:
       	 	r.Q_lan_Cov = NewUnionNullDouble()

		return
	
	
        
	case 10:
       	 	r.Q_aop_Cov = NewUnionNullDouble()

		return
	
	
        
	case 11:
       	 	r.Q_M_Cov = NewUnionNullDouble()

		return
	
	
        
	case 12:
       	 	r.Q_epoch_Cov = NewUnionNullDouble()

		return
	
	
        
	case 13:
       	 	r.E_i_Cov = NewUnionNullDouble()

		return
	
	
        
	case 14:
       	 	r.E_lan_Cov = NewUnionNullDouble()

		return
	
	
        
	case 15:
       	 	r.E_aop_Cov = NewUnionNullDouble()

		return
	
	
        
	case 16:
       	 	r.E_M_Cov = NewUnionNullDouble()

		return
	
	
        
	case 17:
       	 	r.E_epoch_Cov = NewUnionNullDouble()

		return
	
	
        
	case 18:
       	 	r.I_lan_Cov = NewUnionNullDouble()

		return
	
	
        
	case 19:
       	 	r.I_aop_Cov = NewUnionNullDouble()

		return
	
	
        
	case 20:
       	 	r.I_M_Cov = NewUnionNullDouble()

		return
	
	
        
	case 21:
       	 	r.I_epoch_Cov = NewUnionNullDouble()

		return
	
	
        
	case 22:
       	 	r.Lan_aop_Cov = NewUnionNullDouble()

		return
	
	
        
	case 23:
       	 	r.Lan_M_Cov = NewUnionNullDouble()

		return
	
	
        
	case 24:
       	 	r.Lan_epoch_Cov = NewUnionNullDouble()

		return
	
	
        
	case 25:
       	 	r.Aop_M_Cov = NewUnionNullDouble()

		return
	
	
        
	case 26:
       	 	r.Aop_epoch_Cov = NewUnionNullDouble()

		return
	
	
        
	case 27:
       	 	r.M_epoch_Cov = NewUnionNullDouble()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *Oe_Cov) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Oe_Cov) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *Oe_Cov) Finalize() { }


func (_ *Oe_Cov) AvroCRC64Fingerprint() []byte {
  return []byte(Oe_CovAvroCRC64Fingerprint)
}
