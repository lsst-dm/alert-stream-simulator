// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type ULcNonPeriodic struct {

	
	
		ULcNonPeriodic01 *UnionNullFloat
	

	
	
		ULcNonPeriodic02 *UnionNullFloat
	

	
	
		ULcNonPeriodic03 *UnionNullFloat
	

	
	
		ULcNonPeriodic04 *UnionNullFloat
	

	
	
		ULcNonPeriodic05 *UnionNullFloat
	

	
	
		ULcNonPeriodic06 *UnionNullFloat
	

	
	
		ULcNonPeriodic07 *UnionNullFloat
	

	
	
		ULcNonPeriodic08 *UnionNullFloat
	

	
	
		ULcNonPeriodic09 *UnionNullFloat
	

	
	
		ULcNonPeriodic10 *UnionNullFloat
	

	
	
		ULcNonPeriodic11 *UnionNullFloat
	

	
	
		ULcNonPeriodic12 *UnionNullFloat
	

	
	
		ULcNonPeriodic13 *UnionNullFloat
	

	
	
		ULcNonPeriodic14 *UnionNullFloat
	

	
	
		ULcNonPeriodic15 *UnionNullFloat
	

	
	
		ULcNonPeriodic16 *UnionNullFloat
	

	
	
		ULcNonPeriodic17 *UnionNullFloat
	

	
	
		ULcNonPeriodic18 *UnionNullFloat
	

	
	
		ULcNonPeriodic19 *UnionNullFloat
	

	
	
		ULcNonPeriodic20 *UnionNullFloat
	

}

const ULcNonPeriodicAvroCRC64Fingerprint = "\fÌ®\x14\xd8 \x03\xe3"

func NewULcNonPeriodic() (*ULcNonPeriodic) {
	return &ULcNonPeriodic{}
}

func DeserializeULcNonPeriodic(r io.Reader) (*ULcNonPeriodic, error) {
	t := NewULcNonPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeULcNonPeriodicFromSchema(r io.Reader, schema string) (*ULcNonPeriodic, error) {
	t := NewULcNonPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeULcNonPeriodic(r *ULcNonPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.ULcNonPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcNonPeriodic20, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *ULcNonPeriodic) Serialize(w io.Writer) error {
	return writeULcNonPeriodic(r, w)
}

func (r *ULcNonPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"uLcNonPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcNonPeriodic20\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.uLcNonPeriodic\",\"type\":\"record\"}"
}

func (r *ULcNonPeriodic) SchemaName() string {
	return "lsst.uLcNonPeriodic"
}

func (_ *ULcNonPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ULcNonPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.ULcNonPeriodic01 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic01
		
	
	case 1:
		
			r.ULcNonPeriodic02 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic02
		
	
	case 2:
		
			r.ULcNonPeriodic03 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic03
		
	
	case 3:
		
			r.ULcNonPeriodic04 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic04
		
	
	case 4:
		
			r.ULcNonPeriodic05 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic05
		
	
	case 5:
		
			r.ULcNonPeriodic06 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic06
		
	
	case 6:
		
			r.ULcNonPeriodic07 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic07
		
	
	case 7:
		
			r.ULcNonPeriodic08 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic08
		
	
	case 8:
		
			r.ULcNonPeriodic09 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic09
		
	
	case 9:
		
			r.ULcNonPeriodic10 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic10
		
	
	case 10:
		
			r.ULcNonPeriodic11 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic11
		
	
	case 11:
		
			r.ULcNonPeriodic12 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic12
		
	
	case 12:
		
			r.ULcNonPeriodic13 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic13
		
	
	case 13:
		
			r.ULcNonPeriodic14 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic14
		
	
	case 14:
		
			r.ULcNonPeriodic15 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic15
		
	
	case 15:
		
			r.ULcNonPeriodic16 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic16
		
	
	case 16:
		
			r.ULcNonPeriodic17 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic17
		
	
	case 17:
		
			r.ULcNonPeriodic18 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic18
		
	
	case 18:
		
			r.ULcNonPeriodic19 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic19
		
	
	case 19:
		
			r.ULcNonPeriodic20 = NewUnionNullFloat()

		
		
			return r.ULcNonPeriodic20
		
	
	}
	panic("Unknown field index")
}

func (r *ULcNonPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.ULcNonPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.ULcNonPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.ULcNonPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.ULcNonPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.ULcNonPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.ULcNonPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.ULcNonPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.ULcNonPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.ULcNonPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.ULcNonPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.ULcNonPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.ULcNonPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.ULcNonPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.ULcNonPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.ULcNonPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.ULcNonPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.ULcNonPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.ULcNonPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.ULcNonPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.ULcNonPeriodic20 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *ULcNonPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *ULcNonPeriodic) Finalize() { }


func (_ *ULcNonPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(ULcNonPeriodicAvroCRC64Fingerprint)
}
