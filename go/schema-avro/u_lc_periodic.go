// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type ULcPeriodic struct {

	
	
		ULcPeriodic01 *UnionNullFloat
	

	
	
		ULcPeriodic02 *UnionNullFloat
	

	
	
		ULcPeriodic03 *UnionNullFloat
	

	
	
		ULcPeriodic04 *UnionNullFloat
	

	
	
		ULcPeriodic05 *UnionNullFloat
	

	
	
		ULcPeriodic06 *UnionNullFloat
	

	
	
		ULcPeriodic07 *UnionNullFloat
	

	
	
		ULcPeriodic08 *UnionNullFloat
	

	
	
		ULcPeriodic09 *UnionNullFloat
	

	
	
		ULcPeriodic10 *UnionNullFloat
	

	
	
		ULcPeriodic11 *UnionNullFloat
	

	
	
		ULcPeriodic12 *UnionNullFloat
	

	
	
		ULcPeriodic13 *UnionNullFloat
	

	
	
		ULcPeriodic14 *UnionNullFloat
	

	
	
		ULcPeriodic15 *UnionNullFloat
	

	
	
		ULcPeriodic16 *UnionNullFloat
	

	
	
		ULcPeriodic17 *UnionNullFloat
	

	
	
		ULcPeriodic18 *UnionNullFloat
	

	
	
		ULcPeriodic19 *UnionNullFloat
	

	
	
		ULcPeriodic20 *UnionNullFloat
	

	
	
		ULcPeriodic21 *UnionNullFloat
	

	
	
		ULcPeriodic22 *UnionNullFloat
	

	
	
		ULcPeriodic23 *UnionNullFloat
	

	
	
		ULcPeriodic24 *UnionNullFloat
	

	
	
		ULcPeriodic25 *UnionNullFloat
	

	
	
		ULcPeriodic26 *UnionNullFloat
	

	
	
		ULcPeriodic27 *UnionNullFloat
	

	
	
		ULcPeriodic28 *UnionNullFloat
	

	
	
		ULcPeriodic29 *UnionNullFloat
	

	
	
		ULcPeriodic30 *UnionNullFloat
	

	
	
		ULcPeriodic31 *UnionNullFloat
	

	
	
		ULcPeriodic32 *UnionNullFloat
	

}

const ULcPeriodicAvroCRC64Fingerprint = "\b\xe8\x8aP8@\xcb/"

func NewULcPeriodic() (*ULcPeriodic) {
	return &ULcPeriodic{}
}

func DeserializeULcPeriodic(r io.Reader) (*ULcPeriodic, error) {
	t := NewULcPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeULcPeriodicFromSchema(r io.Reader, schema string) (*ULcPeriodic, error) {
	t := NewULcPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeULcPeriodic(r *ULcPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.ULcPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic20, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic21, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic22, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic23, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic24, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic25, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic26, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic27, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic28, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic29, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic30, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic31, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.ULcPeriodic32, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *ULcPeriodic) Serialize(w io.Writer) error {
	return writeULcPeriodic(r, w)
}

func (r *ULcPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"uLcPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic20\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic21\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic22\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic23\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic24\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic25\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic26\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic27\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic28\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic29\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic30\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic31\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"uLcPeriodic32\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.uLcPeriodic\",\"type\":\"record\"}"
}

func (r *ULcPeriodic) SchemaName() string {
	return "lsst.uLcPeriodic"
}

func (_ *ULcPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *ULcPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ULcPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.ULcPeriodic01 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic01
		
	
	case 1:
		
			r.ULcPeriodic02 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic02
		
	
	case 2:
		
			r.ULcPeriodic03 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic03
		
	
	case 3:
		
			r.ULcPeriodic04 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic04
		
	
	case 4:
		
			r.ULcPeriodic05 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic05
		
	
	case 5:
		
			r.ULcPeriodic06 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic06
		
	
	case 6:
		
			r.ULcPeriodic07 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic07
		
	
	case 7:
		
			r.ULcPeriodic08 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic08
		
	
	case 8:
		
			r.ULcPeriodic09 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic09
		
	
	case 9:
		
			r.ULcPeriodic10 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic10
		
	
	case 10:
		
			r.ULcPeriodic11 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic11
		
	
	case 11:
		
			r.ULcPeriodic12 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic12
		
	
	case 12:
		
			r.ULcPeriodic13 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic13
		
	
	case 13:
		
			r.ULcPeriodic14 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic14
		
	
	case 14:
		
			r.ULcPeriodic15 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic15
		
	
	case 15:
		
			r.ULcPeriodic16 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic16
		
	
	case 16:
		
			r.ULcPeriodic17 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic17
		
	
	case 17:
		
			r.ULcPeriodic18 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic18
		
	
	case 18:
		
			r.ULcPeriodic19 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic19
		
	
	case 19:
		
			r.ULcPeriodic20 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic20
		
	
	case 20:
		
			r.ULcPeriodic21 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic21
		
	
	case 21:
		
			r.ULcPeriodic22 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic22
		
	
	case 22:
		
			r.ULcPeriodic23 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic23
		
	
	case 23:
		
			r.ULcPeriodic24 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic24
		
	
	case 24:
		
			r.ULcPeriodic25 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic25
		
	
	case 25:
		
			r.ULcPeriodic26 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic26
		
	
	case 26:
		
			r.ULcPeriodic27 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic27
		
	
	case 27:
		
			r.ULcPeriodic28 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic28
		
	
	case 28:
		
			r.ULcPeriodic29 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic29
		
	
	case 29:
		
			r.ULcPeriodic30 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic30
		
	
	case 30:
		
			r.ULcPeriodic31 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic31
		
	
	case 31:
		
			r.ULcPeriodic32 = NewUnionNullFloat()

		
		
			return r.ULcPeriodic32
		
	
	}
	panic("Unknown field index")
}

func (r *ULcPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.ULcPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.ULcPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.ULcPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.ULcPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.ULcPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.ULcPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.ULcPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.ULcPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.ULcPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.ULcPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.ULcPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.ULcPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.ULcPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.ULcPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.ULcPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.ULcPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.ULcPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.ULcPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.ULcPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.ULcPeriodic20 = NewUnionNullFloat()

		return
	
	
        
	case 20:
       	 	r.ULcPeriodic21 = NewUnionNullFloat()

		return
	
	
        
	case 21:
       	 	r.ULcPeriodic22 = NewUnionNullFloat()

		return
	
	
        
	case 22:
       	 	r.ULcPeriodic23 = NewUnionNullFloat()

		return
	
	
        
	case 23:
       	 	r.ULcPeriodic24 = NewUnionNullFloat()

		return
	
	
        
	case 24:
       	 	r.ULcPeriodic25 = NewUnionNullFloat()

		return
	
	
        
	case 25:
       	 	r.ULcPeriodic26 = NewUnionNullFloat()

		return
	
	
        
	case 26:
       	 	r.ULcPeriodic27 = NewUnionNullFloat()

		return
	
	
        
	case 27:
       	 	r.ULcPeriodic28 = NewUnionNullFloat()

		return
	
	
        
	case 28:
       	 	r.ULcPeriodic29 = NewUnionNullFloat()

		return
	
	
        
	case 29:
       	 	r.ULcPeriodic30 = NewUnionNullFloat()

		return
	
	
        
	case 30:
       	 	r.ULcPeriodic31 = NewUnionNullFloat()

		return
	
	
        
	case 31:
       	 	r.ULcPeriodic32 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *ULcPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ULcPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *ULcPeriodic) Finalize() { }


func (_ *ULcPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(ULcPeriodicAvroCRC64Fingerprint)
}
