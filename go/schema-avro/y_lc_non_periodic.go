// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     lsst.alert.avsc
 *     lsst.alert.cutout.avsc
 *     lsst.alert.diaForcedSource.avsc
 *     lsst.alert.diaNondetectionLimit.avsc
 *     lsst.alert.diaSource.avsc
 *     lsst.diaObject.avsc
 *     lsst.ssObject.avsc
 */
package schema

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type YLcNonPeriodic struct {

	
	
		YLcNonPeriodic01 *UnionNullFloat
	

	
	
		YLcNonPeriodic02 *UnionNullFloat
	

	
	
		YLcNonPeriodic03 *UnionNullFloat
	

	
	
		YLcNonPeriodic04 *UnionNullFloat
	

	
	
		YLcNonPeriodic05 *UnionNullFloat
	

	
	
		YLcNonPeriodic06 *UnionNullFloat
	

	
	
		YLcNonPeriodic07 *UnionNullFloat
	

	
	
		YLcNonPeriodic08 *UnionNullFloat
	

	
	
		YLcNonPeriodic09 *UnionNullFloat
	

	
	
		YLcNonPeriodic10 *UnionNullFloat
	

	
	
		YLcNonPeriodic11 *UnionNullFloat
	

	
	
		YLcNonPeriodic12 *UnionNullFloat
	

	
	
		YLcNonPeriodic13 *UnionNullFloat
	

	
	
		YLcNonPeriodic14 *UnionNullFloat
	

	
	
		YLcNonPeriodic15 *UnionNullFloat
	

	
	
		YLcNonPeriodic16 *UnionNullFloat
	

	
	
		YLcNonPeriodic17 *UnionNullFloat
	

	
	
		YLcNonPeriodic18 *UnionNullFloat
	

	
	
		YLcNonPeriodic19 *UnionNullFloat
	

	
	
		YLcNonPeriodic20 *UnionNullFloat
	

}

const YLcNonPeriodicAvroCRC64Fingerprint = "s\xf2~C\v0D\xcc"

func NewYLcNonPeriodic() (*YLcNonPeriodic) {
	return &YLcNonPeriodic{}
}

func DeserializeYLcNonPeriodic(r io.Reader) (*YLcNonPeriodic, error) {
	t := NewYLcNonPeriodic()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeYLcNonPeriodicFromSchema(r io.Reader, schema string) (*YLcNonPeriodic, error) {
	t := NewYLcNonPeriodic()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeYLcNonPeriodic(r *YLcNonPeriodic, w io.Writer) error {
	var err error
	
	err = writeUnionNullFloat( r.YLcNonPeriodic01, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic02, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic03, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic04, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic05, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic06, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic07, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic08, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic09, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic10, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic11, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic12, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic13, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic14, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic15, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic16, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic17, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic18, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic19, w)
	if err != nil {
		return err
	}
	
	err = writeUnionNullFloat( r.YLcNonPeriodic20, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *YLcNonPeriodic) Serialize(w io.Writer) error {
	return writeYLcNonPeriodic(r, w)
}

func (r *YLcNonPeriodic) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"yLcNonPeriodic01\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic02\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic03\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic04\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic05\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic06\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic07\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic08\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic09\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic10\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic11\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic12\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic13\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic14\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic15\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic16\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic17\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic18\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic19\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"yLcNonPeriodic20\",\"type\":[\"null\",\"float\"]}],\"name\":\"lsst.yLcNonPeriodic\",\"type\":\"record\"}"
}

func (r *YLcNonPeriodic) SchemaName() string {
	return "lsst.yLcNonPeriodic"
}

func (_ *YLcNonPeriodic) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetInt(v int32) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetLong(v int64) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetString(v string) { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *YLcNonPeriodic) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.YLcNonPeriodic01 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic01
		
	
	case 1:
		
			r.YLcNonPeriodic02 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic02
		
	
	case 2:
		
			r.YLcNonPeriodic03 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic03
		
	
	case 3:
		
			r.YLcNonPeriodic04 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic04
		
	
	case 4:
		
			r.YLcNonPeriodic05 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic05
		
	
	case 5:
		
			r.YLcNonPeriodic06 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic06
		
	
	case 6:
		
			r.YLcNonPeriodic07 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic07
		
	
	case 7:
		
			r.YLcNonPeriodic08 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic08
		
	
	case 8:
		
			r.YLcNonPeriodic09 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic09
		
	
	case 9:
		
			r.YLcNonPeriodic10 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic10
		
	
	case 10:
		
			r.YLcNonPeriodic11 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic11
		
	
	case 11:
		
			r.YLcNonPeriodic12 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic12
		
	
	case 12:
		
			r.YLcNonPeriodic13 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic13
		
	
	case 13:
		
			r.YLcNonPeriodic14 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic14
		
	
	case 14:
		
			r.YLcNonPeriodic15 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic15
		
	
	case 15:
		
			r.YLcNonPeriodic16 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic16
		
	
	case 16:
		
			r.YLcNonPeriodic17 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic17
		
	
	case 17:
		
			r.YLcNonPeriodic18 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic18
		
	
	case 18:
		
			r.YLcNonPeriodic19 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic19
		
	
	case 19:
		
			r.YLcNonPeriodic20 = NewUnionNullFloat()

		
		
			return r.YLcNonPeriodic20
		
	
	}
	panic("Unknown field index")
}

func (r *YLcNonPeriodic) SetDefault(i int) {
	switch (i) {
	
        
	case 0:
       	 	r.YLcNonPeriodic01 = NewUnionNullFloat()

		return
	
	
        
	case 1:
       	 	r.YLcNonPeriodic02 = NewUnionNullFloat()

		return
	
	
        
	case 2:
       	 	r.YLcNonPeriodic03 = NewUnionNullFloat()

		return
	
	
        
	case 3:
       	 	r.YLcNonPeriodic04 = NewUnionNullFloat()

		return
	
	
        
	case 4:
       	 	r.YLcNonPeriodic05 = NewUnionNullFloat()

		return
	
	
        
	case 5:
       	 	r.YLcNonPeriodic06 = NewUnionNullFloat()

		return
	
	
        
	case 6:
       	 	r.YLcNonPeriodic07 = NewUnionNullFloat()

		return
	
	
        
	case 7:
       	 	r.YLcNonPeriodic08 = NewUnionNullFloat()

		return
	
	
        
	case 8:
       	 	r.YLcNonPeriodic09 = NewUnionNullFloat()

		return
	
	
        
	case 9:
       	 	r.YLcNonPeriodic10 = NewUnionNullFloat()

		return
	
	
        
	case 10:
       	 	r.YLcNonPeriodic11 = NewUnionNullFloat()

		return
	
	
        
	case 11:
       	 	r.YLcNonPeriodic12 = NewUnionNullFloat()

		return
	
	
        
	case 12:
       	 	r.YLcNonPeriodic13 = NewUnionNullFloat()

		return
	
	
        
	case 13:
       	 	r.YLcNonPeriodic14 = NewUnionNullFloat()

		return
	
	
        
	case 14:
       	 	r.YLcNonPeriodic15 = NewUnionNullFloat()

		return
	
	
        
	case 15:
       	 	r.YLcNonPeriodic16 = NewUnionNullFloat()

		return
	
	
        
	case 16:
       	 	r.YLcNonPeriodic17 = NewUnionNullFloat()

		return
	
	
        
	case 17:
       	 	r.YLcNonPeriodic18 = NewUnionNullFloat()

		return
	
	
        
	case 18:
       	 	r.YLcNonPeriodic19 = NewUnionNullFloat()

		return
	
	
        
	case 19:
       	 	r.YLcNonPeriodic20 = NewUnionNullFloat()

		return
	
	
	}
	panic("Unknown field index")
}

func (_ *YLcNonPeriodic) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *YLcNonPeriodic) Finalize() { }


func (_ *YLcNonPeriodic) AvroCRC64Fingerprint() []byte {
  return []byte(YLcNonPeriodicAvroCRC64Fingerprint)
}
